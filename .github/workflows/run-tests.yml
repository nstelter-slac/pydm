# This workflow will install pydm dependencies and run the test suite for all combinations
# of operating systems and version numbers specified in the matrix
name: Build Status

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  build:
    if: ${{ github.repository == 'slaclab/pydm' }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.10']
    env:
      DISPLAY: ':99.0'
      QT_MAC_WANTS_LAYER: 1  # PyQT gui tests involving qtbot interaction on macOS will fail without this

    steps:
    - name: Install packages for testing a Python Qt app on Linux
      shell: bash -el {0}
      run: |
        if [ "$RUNNER_OS" == "Linux" ]; then
          sudo apt update
          sudo apt install -y xvfb herbstluftwm libxkbcommon-x11-0 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0 libxcb-render-util0 libxcb-xinerama0 libxcb-xfixes0 x11-utils
          sudo /sbin/start-stop-daemon --start --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1024x768x24 -ac +extension GLX +render -noreset
          sleep 3
          sudo /sbin/start-stop-daemon --start --pidfile /tmp/custom_herbstluftwm_99.pid --make-pidfile --background --exec /usr/bin/herbstluftwm
          sleep 1
        fi

    - uses: actions/checkout@v4
    - name: Setup Conda and install PyQt5
      uses: conda-incubator/setup-miniconda@v3
      with:
        python-version: ${{ matrix.python-version }}
        miniforge-variant: Miniforge3
        miniforge-version: latest
        activate-environment: pyqt-env
        conda-remove-defaults: true
        architecture: x64  # Ensure macOS finds PyQt 5.12.3 which isn't available with osx-arm64

    - name: Setup Conda and install PySide6
      uses: conda-incubator/setup-miniconda@v3
      with:
        python-version: ${{ matrix.python-version }}
        miniforge-variant: Miniforge3
        miniforge-version: latest
        activate-environment: pyside-env
        conda-remove-defaults: true
        architecture: x64
        auto-update-conda: true

    - name: Install PySide6 and PyDM with Mamba (if windows use conda)
      shell: bash -el {0}
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
          conda install -c conda-forge pyside6 pydm
        else
          mamba install -c conda-forge pyside6 pydm pyca
        fi

    - name: Install additional Python dependencies with pip for PySide6
      shell: bash -el {0}
      run: |
        pip install -r requirements.txt
        if [ "$RUNNER_OS" == "Windows" ]; then
          pip install -r windows-dev-requirements.txt
        else
          pip install -r dev-requirements.txt
        fi

    - name: Run PySide6 tests with pytest
      env:
        QT_API: pyside6
      shell: bash -el {0}
      timeout-minutes: 30
      run: |
        echo "Running PySide6 tests with QT_API=$QT_API"
        python -c "import PySide6.QtCore; print('PySide6 is installed and working')"
        python run_tests.py
